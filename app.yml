---
AWSTemplateFormatVersion: '2010-09-09'

Description: >
  joelshepherd/ecs-cloudformation
  (coming soon) App stack

Parameters:
  GitHubUser:
    Type: String
    Description: Your username on GitHub.

  GitHubRepo:
    Type: String
    Default: ecs-demo-php-simple-app
    Description: The repo name of the sample service.

  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.

  GitHubToken:
    Type: String
    Description: Token for the user specified above. (https://github.com/settings/tokens)

  Cluster:
    Type: string
    Description: The ECS cluster to deploy the application to.

  Hostname:
    Type: string
    Description: The hostname for the new application.

  # @TODO SSL certs and new load balancers????

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
    ParameterGroups:
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken

Resources:
  # @TODO Target group OR load balancer?
  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-continuous-deployment/templates/load-balancer.yaml
      Parameters:
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/joelshepherd-ecs-cloudformation/templates/service.yml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 2
        ProductServiceUrl: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /

  Pipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/ecs-refarch-continuous-deployment/templates/pipeline.yaml
      Parameters:
        Cluster: !GetAtt Cluster
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        TemplateBucket: !Sub ecs-refarch-continuous-deployment-${AWS::Region}

    # @TODO Target group?
    ## @TODO Move this to app.yml

# @TODO Nope?
Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
